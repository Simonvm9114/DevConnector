{
	// Place your DevConnector workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Standard express router": {
		"scope": "javascript",
		"prefix": ["get-express-router", "get"],
		"body": ["router.get('/${1}', (req, res) => {", "\t${0}", "})"],
		"description": "A very simple get router."
	  },
	  "Standard server error": {
		  "scope": "javascript",
		  "prefix": ["servererr", "err"],
		  "body": ["try {", "\t${0}", "} catch (err) {", "\tconsole.error(err.message);", "\tres.status(500).send('Server Error');", "}"],
		  "description": "Try-catch block with standard server error handling"
	  },
	  "Import model": {
		"scope": "javascript",
		"prefix": ["model", "import-model", "mdl"],
		"body": "const ${1} = require('../../models/${1}');",
		"description": "model import"
	  }


	
}